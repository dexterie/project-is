# -*- coding: utf-8 -*-
"""SVM_RandomForest.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vnY_cbdnhjijCo3pABKswjRGVyoy8srt
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import cross_val_score, StratifiedKFold, train_test_split
from sklearn.svm import SVC
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score

from google.colab import files
uploaded = files.upload()

df = pd.read_csv("heart_missing.csv")

df.head()

df.tail()

df.isnull().sum()

df["age"].fillna(df["age"].mean(), inplace=True)  # เติมค่าด้วยค่าเฉลี่ย
df["chol"].fillna(df["chol"].median(), inplace=True)  # เติมค่าด้วยค่ามัธยฐาน

df["sex"].fillna(df["sex"].mode()[0], inplace=True)
df["thal"].fillna(df["thal"].mode()[0], inplace=True)

df.interpolate(method="linear", inplace=True)
df.dropna(inplace=True)
df.dropna(axis=1, thresh=int(0.5 * len(df)), inplace=True)

df.isnull().sum()

df["target"] = df["target"].astype(int)
df["target"] = df["target"].apply(lambda x: 1 if x > 0.5 else 0)

Q1 = df["chol"].quantile(0.25)
Q3 = df["chol"].quantile(0.75)
IQR = Q3 - Q1

# ลบข้อมูลที่อยู่นอกช่วง 1.5 เท่าของ IQR
df = df[~((df["chol"] < (Q1 - 1.5 * IQR)) | (df["chol"] > (Q3 + 1.5 * IQR)))]

# แยก Features และ Target
X = df.drop(columns=["target"])
y = df["target"]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# เทรนโมเดล SVM และ RandomForest
svm_model = SVC(kernel="linear", random_state=42)
svm_model.fit(X_train_scaled, y_train)
y_pred_svm = svm_model.predict(X_test_scaled)

rf_model = RandomForestClassifier(n_estimators=100, random_state=42)
rf_model.fit(X_train, y_train)
y_pred_rf = rf_model.predict(X_test)

# คำนวณคะแนน Cross Validation
svm_scores = cross_val_score(svm_model, X_train_scaled, y_train, cv=kf, scoring="accuracy")
rf_scores = cross_val_score(rf_model, X_train, y_train, cv=kf, scoring="accuracy")

acc_svc = accuracy_score(y_test, y_pred_svm)
acc_rf = accuracy_score(y_test, y_pred_rf)

acc_svc, acc_rf
print(f"SVC Accuracy: {acc_svc:.2f}")
print(f"Random Forest Accuracy: {acc_rf:.2f}")

import pickle

# บันทึกโมเดล SVM
with open("svm_model.pkl", "wb") as file:
    pickle.dump(svm_model, file)

# บันทึกโมเดล Random Forest
with open("rf_model.pkl", "wb") as file:
    pickle.dump(rf_model, file)

print("บันทึกโมเดล")